// <auto-generated />
using System;
using Alfatec.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Alfatec.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Alfatec.Domain.Entities.Arquivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Diretorio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoArquivo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("JPG");

                    b.Property<int>("TipoObjeto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Arquivo");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.Autorizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AcessoModuloContato")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Bloqueado")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("DesativarProduto")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("EditarInformacoesEmpresa")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("EditarInformacoesUsuario")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("EditarProduto")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("InserirProduto")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("TipoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.HasKey("Id");

                    b.ToTable("Autorizacao");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TipoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(7);

                    b.HasKey("Id");

                    b.ToTable("Categoria");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 310, DateTimeKind.Local).AddTicks(1736),
                            NomeCategoria = "Grãos e cereais",
                            TipoObjeto = 7
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 310, DateTimeKind.Local).AddTicks(1754),
                            NomeCategoria = "Frutas",
                            TipoObjeto = 7
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 310, DateTimeKind.Local).AddTicks(1757),
                            NomeCategoria = "Horaliças",
                            TipoObjeto = 7
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 310, DateTimeKind.Local).AddTicks(1759),
                            NomeCategoria = "Produtos lácteos",
                            TipoObjeto = 7
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 310, DateTimeKind.Local).AddTicks(1761),
                            NomeCategoria = "Carne e aves",
                            TipoObjeto = 7
                        });
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComentarioTexto")
                        .IsRequired()
                        .HasMaxLength(25600)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataComentario")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(6);

                    b.Property<int>("UsuarioQueComentou")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.Condicoes", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoObjeto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Condicoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Estradas não pavimentadas",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Buracos e irregularidades",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Lama e alagamentos",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Estradas estreitas",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Declives e aclives pronunciados",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Curvas fechadas e sinuosas",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Presença de animais",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Ausência de sinalização e iluminação",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Condições climáticas extremas",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Falta de serviços de emergência",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Falta de acostamento",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Presença de pedras soltas",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 13,
                            Nome = "Ponte de uma única faixa",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 14,
                            Nome = "Vegetação sobre crescida",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 15,
                            Nome = "Excesso Poeira",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 16,
                            Nome = "Inclinações laterais",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 17,
                            Nome = "Cruzamentos não sinalizados",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 18,
                            Nome = "Presença de tratores e veículos agrícolas",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 19,
                            Nome = "Estradas com manutenção irregular",
                            TipoObjeto = 15
                        },
                        new
                        {
                            Id = 20,
                            Nome = "Riscos sazonais",
                            TipoObjeto = 15
                        });
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.CondicoesEstrada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("TipoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(16);

                    b.HasKey("Id");

                    b.ToTable("CondicoesEstrada");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.ConfiguracoesUsuario", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("TipoObjeto")
                        .HasColumnType("int");

                    b.Property<string>("nomeConfiguracao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ConfiguracoesUsuario");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaAtuacao")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Classificacao")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEndereco")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("NomeEmpresa")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("TipoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(3);

                    b.Property<int?>("VendasConcluidas")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("enderecoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("enderecoId");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("-");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacoes")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasDefaultValue("-");

                    b.Property<string>("Rua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(8);

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("latitude")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("longitude")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AntigoValor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCampoAlterado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NovoValor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(13);

                    b.Property<int>("TipoObjetoAlterado")
                        .HasColumnType("int");

                    b.Property<int>("Usuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.Mensagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destinatario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdModelo")
                        .HasColumnType("int");

                    b.Property<string>("MensagemTexto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remetente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusEnvio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoObjeto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdModelo");

                    b.ToTable("Mensagem");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.MidiaProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Diretorio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDproduto")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoArquivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(9);

                    b.HasKey("Id");

                    b.HasIndex("IDproduto");

                    b.ToTable("MidiaProduto");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.MidiaUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Diretorio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoArquivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10);

                    b.HasKey("Id");

                    b.ToTable("MidiaUsuario");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.ModeloMensagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TextoModelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoObjeto")
                        .HasColumnType("int");

                    b.Property<string>("nomeModelo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ModeloMensagem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TextoModelo = "Olá {{NomeUsuario}},\r\n\r\nSeja bem-vindo à nossa plataforma! Estamos muito felizes em tê-lo(a) conosco.\r\n\r\nSeu cadastro foi realizado com sucesso usando o email: {{Email}}.\r\nTipo de usuário cadastrado: [Tipo de usuário]\r\nPara acessar sua conta pela primeira vez, utilize a seguinte senha temporária: {{SenhaTemp}}. Recomendamos que você altere sua senha assim que fizer login.\r\nPara acessar nossa plataforma, clique no link abaixo:\r\n\r\n{{Link de acesso}}",
                            TipoObjeto = 20,
                            nomeModelo = "Primeiro Acesso"
                        },
                        new
                        {
                            Id = 2,
                            TextoModelo = "Olá {{NomeUsuario}},\r\n\r\nUm novo serviço baseado em seu perfil acabou de aparecer. Se estiver interessado, por favor, responda com o número 1. Segue o resumo:\r\nTransporte de carga {{TipoCarga}}, aproximadamente {{PesoCarga}}} Kilos para o endereço:\r\n{{Endereco}}.\r\n\r\nAs condições da via são: {{CondicoesVia}}.\r\n\r\nO tempo total da viagem de ida é de aproximadamente {{TempoAproximado}} horas com o valor de {{ValorHora}} reais por hora, totalizando {{Total}} reais.\r\nFicamos no aguardo de sua resposta.",
                            TipoObjeto = 20,
                            nomeModelo = "Notifica Servico"
                        },
                        new
                        {
                            Id = 3,
                            TextoModelo = "Olá {{NomeUsuario}},\r\n\r\nVocê solicitou uma nova senha. Sua nova senha é: {{NovaSenha}}.",
                            TipoObjeto = 20,
                            nomeModelo = "Resetar Senha"
                        });
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.ModoEnvio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJTransportadora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalculoPrevisaoEntrega")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IETransportadora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeTransportadora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoEnvio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(12);

                    b.HasKey("Id");

                    b.ToTable("ModoEnvio");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.Negociacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataNegociacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEmpresaCompradora")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpresaVendedora")
                        .HasColumnType("int");

                    b.Property<int>("MetodoEnvio")
                        .HasColumnType("int");

                    b.Property<string>("MetodoPagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PrevisaoEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusPagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(11);

                    b.HasKey("Id");

                    b.ToTable("Negociacao");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.Noticia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CaminhoImagem")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DataHoraCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subtitulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Noticia");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<int>("Classificacao")
                        .HasColumnType("int");

                    b.Property<int>("Comentarios")
                        .HasColumnType("int");

                    b.Property<string>("ComentariosAdicionais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdFotos")
                        .HasColumnType("int");

                    b.Property<int>("IdMidiaProduto")
                        .HasColumnType("int");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Selos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("TipoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(4);

                    b.Property<string>("UnidadeVenda")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("Validade")
                        .HasColumnType("datetime2");

                    b.Property<string>("Variacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.Selo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeSelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TipoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(8);

                    b.HasKey("Id");

                    b.ToTable("Selo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5570),
                            NomeSelo = "Agricultura Familiar",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5584),
                            NomeSelo = "BRC Global Standards",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5585),
                            NomeSelo = "Demeter: Agricultura Biodinâmica",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5587),
                            NomeSelo = "Comércio Justo - Fair Trade",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5588),
                            NomeSelo = "ISO 22000: Segurança Alimentar",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5590),
                            NomeSelo = "Kosher: Alimentação Judaica",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5592),
                            NomeSelo = "Non-GMO Project Verified",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5593),
                            NomeSelo = "Orgânico Brasil",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5594),
                            NomeSelo = "SENAR: Agricultura Familiar",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5596),
                            NomeSelo = "SISORG: Avaliação Orgânica",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 11,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5597),
                            NomeSelo = "SQF: Segurança Alimentar",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 12,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5599),
                            NomeSelo = "CCCF: Café, Cacau e Chá Sustentáveis",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 13,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5600),
                            NomeSelo = "NSF International: Saúde Alimentar",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 14,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5601),
                            NomeSelo = "ISO 9001: Qualidade",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 15,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5603),
                            NomeSelo = "Fairtrade International",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 16,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5604),
                            NomeSelo = "EU Organic",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 17,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5605),
                            NomeSelo = "GFCO: Livre de Glúten",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 18,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5607),
                            NomeSelo = "EcoCert: Ecológica",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 19,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5608),
                            NomeSelo = "Vegan Action",
                            TipoObjeto = 8
                        },
                        new
                        {
                            Id = 20,
                            DataCriacao = new DateTime(2024, 5, 4, 13, 15, 20, 316, DateTimeKind.Local).AddTicks(5610),
                            NomeSelo = "Rainforest Alliance Agriculture",
                            TipoObjeto = 8
                        });
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.Servicos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeServico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(23);

                    b.HasKey("Id");

                    b.ToTable("Servicos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Orientação técnica para manejo de culturas.",
                            NomeServico = "Consultoria Agronômica",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Acompanhamento regular para otimização agrícola.",
                            NomeServico = "Assistência Técnica",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Distribuição eficiente de produtos agrícolas.",
                            NomeServico = "Logística de Transporte",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Controle e distribuição segura de colheitas.",
                            NomeServico = "Armazenagem Pós-Colheita",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Aluguel e manutenção de equipamentos agrícolas.",
                            NomeServico = "Serviços de Máquinas Agrícolas",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 6,
                            Descricao = "Avaliação e recomendação de fertilizantes.",
                            NomeServico = "Análise de Solo e Nutrição de Plantas",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 7,
                            Descricao = "Soluções tecnológicas para otimização agrícola.",
                            NomeServico = "Tecnologia Agrícola e Digital",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 8,
                            Descricao = "Projetos e manutenção de sistemas de irrigação.",
                            NomeServico = "Serviços de Irrigação",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 9,
                            Descricao = "Práticas sustentáveis para a agricultura.",
                            NomeServico = "Gestão Ambiental e Sustentabilidade",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 10,
                            Descricao = "Assessoria legal e administrativa para fazendas.",
                            NomeServico = "Assistência Jurídica e Administrativa",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 11,
                            Descricao = "Estratégias de promoção e vendas de produtos.",
                            NomeServico = "Marketing Agrícola",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 12,
                            Descricao = "Cursos e capacitação para agricultores.",
                            NomeServico = "Educação e Treinamento Agrícola",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 13,
                            Descricao = "Proteção contra perdas devido a eventos adversos.",
                            NomeServico = "Seguro Agrícola",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 14,
                            Descricao = "Desenvolvimento de variedades de plantas.",
                            NomeServico = "Genética e Melhoramento Vegetal",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 15,
                            Descricao = "Gestão financeira e tributária para fazendas.",
                            NomeServico = "Contabilidade e Finanças Agrícolas",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 16,
                            Descricao = "Garantia de padrões de qualidade e conformidade.",
                            NomeServico = "Certificação e Qualidade",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 17,
                            Descricao = "Produção e comercialização de materiais genéticos.",
                            NomeServico = "Produção de Sementes e Mudas",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 18,
                            Descricao = "Implementação de fontes de energia limpa em fazendas.",
                            NomeServico = "Energias Renováveis",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 19,
                            Descricao = "Prevenção e combate a problemas fitossanitários.",
                            NomeServico = "Controle de Pragas e Doenças",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 20,
                            Descricao = "Análise e insights sobre tendências e demanda do mercado agrícola.",
                            NomeServico = "Consultoria de Mercado",
                            TipoObjeto = 23
                        },
                        new
                        {
                            Id = 21,
                            Descricao = "Locação Equipamentos.",
                            NomeServico = "Locação Equipamentos",
                            TipoObjeto = 23
                        });
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.ServicosUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdServico")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("NomeServico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServicoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(24);

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ServicosUsuario");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int>("DDD")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("IdAutorizacao")
                        .HasColumnType("int");

                    b.Property<int>("IdEndereco")
                        .HasColumnType("int");

                    b.Property<int>("IdMidiaUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("NomeEmpresa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("TipoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("IdEndereco");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TipoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(21);

                    b.HasKey("Id");

                    b.ToTable("Veiculo");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.VeiculoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<double>("CapacidadeTanque")
                        .HasColumnType("float");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("DataUltimaManutencao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TipoCombustivel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TipoObjeto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(22);

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("VeiculoUsuario");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.Empresa", b =>
                {
                    b.HasOne("Alfatec.Domain.Entities.Endereco", "endereco")
                        .WithMany()
                        .HasForeignKey("enderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("endereco");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.Mensagem", b =>
                {
                    b.HasOne("Alfatec.Domain.Entities.ModeloMensagem", "Modelo")
                        .WithMany()
                        .HasForeignKey("IdModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.MidiaProduto", b =>
                {
                    b.HasOne("Alfatec.Domain.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("IDproduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.ServicosUsuario", b =>
                {
                    b.HasOne("Alfatec.Domain.Entities.Servicos", "Servico")
                        .WithMany()
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alfatec.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Servico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("Alfatec.Domain.Entities.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("IdEndereco")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Alfatec.Domain.Entities.VeiculoUsuario", b =>
                {
                    b.HasOne("Alfatec.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Alfatec.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("Veiculo");
                });
#pragma warning restore 612, 618
        }
    }
}
